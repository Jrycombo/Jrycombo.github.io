<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jrycombo&#39;s Blog</title>
  
  <subtitle>胡乱写的一些草稿，记录部分做过的工作。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-21T13:25:23.187Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jrycombo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>addrinfo结构体定义及相关操作</title>
    <link href="http://yoursite.com/2019/08/21/addrinfo%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/08/21/addrinfo结构体定义及相关操作/</id>
    <published>2019-08-21T13:21:10.000Z</published>
    <updated>2019-08-21T13:25:23.187Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h3><p><strong>addrinfo</strong>结构体包含于头文件<strong>#include&lt;netdb.h&gt;</strong>中，常用于网络编程中解析hostname时使用，来保存获取到的与此域名相关的各种信息，其具体结构如下：</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">addrinfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> ai_flags;                 <span class="comment">/* Input flags.  */</span></span><br><span class="line">  <span class="keyword">int</span> ai_family;                <span class="comment">/* Protocol family for socket.  */</span></span><br><span class="line">  <span class="keyword">int</span> ai_socktype;              <span class="comment">/* Socket type.  */</span></span><br><span class="line">  <span class="keyword">int</span> ai_protocol;              <span class="comment">/* Protocol for socket.  */</span></span><br><span class="line">  <span class="keyword">socklen_t</span> ai_addrlen;         <span class="comment">/* Length of socket address.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr</span> *<span class="title">ai_addr</span>;</span>     <span class="comment">/* Socket address for socket.  */</span></span><br><span class="line">  <span class="keyword">char</span> *ai_canonname;           <span class="comment">/* Canonical name for service location.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">addrinfo</span> *<span class="title">ai_next</span>;</span>     <span class="comment">/* Pointer to next in list.  */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="二、各参数介绍"><a href="#二、各参数介绍" class="headerlink" title="二、各参数介绍"></a>二、各参数介绍</h3><h4 id="2-1-ai-flags"><a href="#2-1-ai-flags" class="headerlink" title="2.1 ai_flags"></a>2.1 ai_flags</h4><p><strong>ai_flags</strong>用来指定如何处理此域名，具体参数如下表：</p><table><thead><tr><th align="center">标志</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">AI_ADDRCONFIG</td><td align="center">只有当主机配置了IPv4（IPv6）地址才进行查询IPv4（IPv6）地址</td></tr><tr><td align="center">AI_ALL</td><td align="center">查找IPv4和IPv6地址</td></tr><tr><td align="center">AI_CANONNAME</td><td align="center">请求canonical name（主机规范名称）</td></tr><tr><td align="center">AI_NUMERICHOST</td><td align="center">阻止域名解析</td></tr><tr><td align="center">AI_NUMERICSERV</td><td align="center">阻止服务名解析</td></tr><tr><td align="center">AI_PASSIVE</td><td align="center">套接字地址用于监听绑定</td></tr><tr><td align="center">AI_V4MAPPED</td><td align="center">若无IPv6地址，则返回IPv4地址</td></tr></tbody></table><h4 id="2-2-ai-family"><a href="#2-2-ai-family" class="headerlink" title="2.2 ai_family"></a>2.2 ai_family</h4><p><strong>ai_famili</strong>指定返回地址的协议簇，集体参数如下表：</p><table><thead><tr><th align="center">域</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">AF_INET</td><td align="center">IPv4域</td></tr><tr><td align="center">AF_INET6</td><td align="center">IPv6域</td></tr><tr><td align="center">AF_UNIX</td><td align="center">UNIX域</td></tr><tr><td align="center">AF_NSPEC</td><td align="center">未指定</td></tr></tbody></table><h4 id="2-3-ai-socktype"><a href="#2-3-ai-socktype" class="headerlink" title="2.3 ai_socktype"></a>2.3 ai_socktype</h4><p><strong>ai_socktype</strong>表示socket的类型，主要有SOCK_STREA(流)M和SOCK_DGRAM(数据报)两种，其它可选如下： </p><table><thead><tr><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">SOCK_DGRAM</td><td align="center">长度固定、无连接的不可靠报文传输</td></tr><tr><td align="center">SOCK_RAW</td><td align="center">IP协议的数据报接口</td></tr><tr><td align="center">SOCK_SEQPACKET</td><td align="center">长度固定、有序、可靠的面向连接的报文传输</td></tr><tr><td align="center">SOCK_STREAM</td><td align="center">有序、可靠、双向的面向连接的报文传输</td></tr></tbody></table><h4 id="2-4-ai-protocol"><a href="#2-4-ai-protocol" class="headerlink" title="2.4 ai_protocol"></a>2.4 ai_protocol</h4><p><strong>ai_protocol</strong>表示协议类型，0为任意类型，具体类型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Standard well-defined IP protocols.  */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    IPPROTO_IP = <span class="number">0</span>,        <span class="comment">/* Dummy protocol for TCP.  */</span></span><br><span class="line">    IPPROTO_ICMP = <span class="number">1</span>,      <span class="comment">/* Internet Control Message Protocol.  */</span></span><br><span class="line">    IPPROTO_IGMP = <span class="number">2</span>,      <span class="comment">/* Internet Group Management Protocol. */</span></span><br><span class="line">    IPPROTO_IPIP = <span class="number">4</span>,      <span class="comment">/* IPIP tunnels (older KA9Q tunnels use 94).  */</span></span><br><span class="line">    IPPROTO_TCP = <span class="number">6</span>,       <span class="comment">/* Transmission Control Protocol.  */</span></span><br><span class="line">    IPPROTO_EGP = <span class="number">8</span>,       <span class="comment">/* Exterior Gateway Protocol.  */</span></span><br><span class="line">    IPPROTO_PUP = <span class="number">12</span>,      <span class="comment">/* PUP protocol.  */</span></span><br><span class="line">    IPPROTO_UDP = <span class="number">17</span>,      <span class="comment">/* User Datagram Protocol.  */</span></span><br><span class="line">    IPPROTO_IDP = <span class="number">22</span>,      <span class="comment">/* XNS IDP protocol.  */</span></span><br><span class="line">    IPPROTO_TP = <span class="number">29</span>,       <span class="comment">/* SO Transport Protocol Class 4.  */</span></span><br><span class="line">    IPPROTO_DCCP = <span class="number">33</span>,     <span class="comment">/* Datagram Congestion Control Protocol.  */</span></span><br><span class="line">    IPPROTO_IPV6 = <span class="number">41</span>,     <span class="comment">/* IPv6 header.  */</span></span><br><span class="line">    IPPROTO_RSVP = <span class="number">46</span>,     <span class="comment">/* Reservation Protocol.  */</span></span><br><span class="line">    IPPROTO_GRE = <span class="number">47</span>,      <span class="comment">/* General Routing Encapsulation.  */</span></span><br><span class="line">    IPPROTO_ESP = <span class="number">50</span>,      <span class="comment">/* encapsulating security payload.  */</span></span><br><span class="line">    IPPROTO_AH = <span class="number">51</span>,       <span class="comment">/* authentication header.  */</span></span><br><span class="line">    IPPROTO_MTP = <span class="number">92</span>,      <span class="comment">/* Multicast Transport Protocol.  */</span></span><br><span class="line">    IPPROTO_BEETPH = <span class="number">94</span>,   <span class="comment">/* IP option pseudo header for BEET.  */</span></span><br><span class="line">    IPPROTO_ENCAP = <span class="number">98</span>,    <span class="comment">/* Encapsulation Header.  */</span></span><br><span class="line">    IPPROTO_PIM = <span class="number">103</span>,     <span class="comment">/* Protocol Independent Multicast.  */</span></span><br><span class="line">    IPPROTO_COMP = <span class="number">108</span>,    <span class="comment">/* Compression Header Protocol.  */</span></span><br><span class="line">    IPPROTO_SCTP = <span class="number">132</span>,    <span class="comment">/* Stream Control Transmission Protocol.  */</span></span><br><span class="line">    IPPROTO_UDPLITE = <span class="number">136</span>, <span class="comment">/* UDP-Lite protocol.  */</span></span><br><span class="line">    IPPROTO_RAW = <span class="number">255</span>,     <span class="comment">/* Raw IP packets.  */</span></span><br><span class="line">    IPPROTO_MAX</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="2-5-ai-addrlen"><a href="#2-5-ai-addrlen" class="headerlink" title="2.5 ai_addrlen"></a>2.5 ai_addrlen</h4><p><strong>ai_addrlen</strong>表示socket address 的长度。</p><h4 id="2-6-ai-addr"><a href="#2-6-ai-addr" class="headerlink" title="2.6 ai_addr"></a>2.6 ai_addr</h4><p><strong>ai_addr</strong>表示socket address 的地址。</p><h4 id="2-7-ai-canonname"><a href="#2-7-ai-canonname" class="headerlink" title="2.7 ai_canonname"></a>2.7 ai_canonname</h4><p><strong>ai_canonname</strong>表述服务器地址的规范名称。</p><h4 id="2-8-ai-next"><a href="#2-8-ai-next" class="headerlink" title="2.8 ai_next"></a>2.8 ai_next</h4><p><strong>ai_next</strong>表示指向多下一条地址，一个域名可能解析为多个ip。</p><h3 id="三、相关操作"><a href="#三、相关操作" class="headerlink" title="三、相关操作"></a>三、相关操作</h3><h4 id="3-1-getaddrinfo"><a href="#3-1-getaddrinfo" class="headerlink" title="3.1 getaddrinfo"></a>3.1 getaddrinfo</h4><p><strong>getaddrinfo</strong>函数位于头文件<strong>#include&lt;netdb.h&gt;</strong>中，用于完成主机名到地址的解析，此函数时协议无关的，能够支持IPv4与IPv6。其调用方法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getaddrinfo</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *<span class="keyword">restrict</span> nodename, <span class="comment">//host或者IP地址</span></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> <span class="keyword">char</span> *<span class="keyword">restrict</span> servname, <span class="comment">//十进制端口号 或者常用服务名称如"ftp"、"http"等</span></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> struct addrinfo *<span class="keyword">restrict</span> hints, <span class="comment">//获取信息要求设置</span></span></span></span><br><span class="line"><span class="function"><span class="params">    struct addrinfo **<span class="keyword">restrict</span> res)</span></span>; <span class="comment">//获取信息结果</span></span><br></pre></td></tr></table></figure><ul><li>nodename为域名地址或者数字化的地址字符串（IPv6、IPv4），如果 <a href="https://www.cnblogs.com/LubinLew/p/POSIX-getaddrinfo.html#parameter_hints_ai_flags" target="_blank" rel="noopener">ai_flags</a> 中设置了AI_NUMERICHOST 标志，那么该参数只能是数字化的地址字符串。</li><li>servname为端口号，可以为数字，也可以为预设的如ftp、http等，如果 <a href="https://www.cnblogs.com/LubinLew/p/POSIX-getaddrinfo.html#parameter_hints_ai_flags" target="_blank" rel="noopener">ai_flags</a> 设置了AI_NUMERICSERV 标志并且该参数未设置为NULL，那么该参数必须是一个指向10进制的端口号字符串。</li><li>hint指向addrinfo结构体，只能设定该结构体中ai_family、ai_socktype、ai_protocol和ai_flags 四个域。</li><li>res使该参数获取一个指向存储结果的addrinfo结构体，使用完成后调用freeaddrinfo()释放存储结果空间。</li></ul><h4 id="3-2-freeaddrinfo"><a href="#3-2-freeaddrinfo" class="headerlink" title="3.2 freeaddrinfo"></a>3.2 freeaddrinfo</h4><p>在上面介绍getaddrinfo时，传入了参数addrinfo用于保存查询的结果。查看该方法的实现，其在内部调用了calloc动态申请了内存，并将结果保存到了传入的参数中，因此在使用getaddrinfo成功获取到地址后，必须要对该部分内存进行释放。freeaddrinfo即是netdb.h提供的释放内存方法。其实现如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeaddrinfo</span><span class="params">(struct addrinfo *ai)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">addrinfo</span> *<span class="title">next</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__BIONIC__)</span></span><br><span class="line">    <span class="keyword">if</span> (ai == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    _DIAGASSERT(ai != <span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        next = ai-&gt;ai_next;</span><br><span class="line">        <span class="keyword">if</span> (ai-&gt;ai_canonname)</span><br><span class="line">            <span class="built_in">free</span>(ai-&gt;ai_canonname);</span><br><span class="line">        <span class="comment">/* no need to free(ai-&gt;ai_addr) */</span></span><br><span class="line">        <span class="built_in">free</span>(ai);</span><br><span class="line">        ai = next;</span><br><span class="line">    &#125; <span class="keyword">while</span> (ai);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>链接：</p><blockquote><p><a href="https://www.cnblogs.com/LubinLew/p/POSIX-DataStructure.html" target="_blank" rel="noopener">https://www.cnblogs.com/LubinLew/p/POSIX-DataStructure.html</a></p><p><a href="https://www.cnblogs.com/fnlingnzb-learner/p/7542770.html" target="_blank" rel="noopener">https://www.cnblogs.com/fnlingnzb-learner/p/7542770.html</a></p></blockquote><p>书籍：</p><blockquote><p>《UNIX环境高级编程》</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、定义&quot;&gt;&lt;a href=&quot;#一、定义&quot; class=&quot;headerlink&quot; title=&quot;一、定义&quot;&gt;&lt;/a&gt;一、定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;addrinfo&lt;/strong&gt;结构体包含于头文件&lt;strong&gt;#include&amp;lt;netdb.h&amp;gt;&lt;/strong&gt;中，常用于网络编程中解析hostname时使用，来保存获取到的与此域名相关的各种信息，其具体结构如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博文测试</title>
    <link href="http://yoursite.com/2019/08/02/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/08/02/第一篇博文测试/</id>
    <published>2019-08-02T08:30:05.000Z</published>
    <updated>2019-08-21T13:22:53.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>文本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(ture):</span><br><span class="line">    learn</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>文本</p><p>链接：<a href="https://www.snort.org" target="_blank" rel="noopener">snort</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h2&gt;&lt;p&gt;文本&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(ture):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    learn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
